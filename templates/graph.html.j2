<select id="groupBySelect">
    <option value="default">Don't group</option>
    <option value="year">Year</option>
</select>
<canvas id="myChart"></canvas>

<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/locale/fr.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8/hammer.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@0.7.7/dist/chartjs-plugin-zoom.min.js"></script>
<script src="/static/chart.js"></script>

<script>
  const ctx = document.getElementById("myChart");
  let data = null;
  let chart = null;

  fetch("{{ url_for('api.journal', meter_id=model.meter_id) }}")
  .then((res) => res.json())
  .then((json) => {
    data = json;
    document.getElementById("groupBySelect").dispatchEvent(new Event('change'));
  });

  $("#groupBySelect").on('change', function(e) {
    if (chart) chart.destroy();
    switch(e.target.value) {
      case 'year':
        groupByYear(data).then((journal) => {
          chart = buildChart(ctx, journal)
        }).catch((err)=>console.log(err));
        break;
      default:
        formatForChart(data).then((journal) => {
          chart = buildChart(ctx, journal)
        }).catch((err)=>console.log(err));
    }
  });
</script>
