<template id="graph-view">
  <div class="row full-height">
    <div class="col-xl-9" style="height: 100%">
      <canvas id="myChart"></canvas>
    </div>
    {# template-add here #}
  </div>
</template>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/locale/fr.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.js"></script>
<script src="/static/buildChart.js"></script>
<script>
class GraphView extends HTMLElement {
  constructor(rawData) {
    super();

    this._rawData = rawData;

    let template = document.getElementById('graph-view');
    let templateContent = template.content;

    const shadowRoot = this.attachShadow({mode: 'open'})
      .appendChild(templateContent.cloneNode(true));
  }

  connectedCallback() {
    const ctx = this.shadowRoot.getElementById("myChart");
    this.formatForChart(this._rawData.journal).then((journal) => buildChart(ctx, journal));    
  }

  formatForChart(journal) {
    return new Promise((resolve, reject) => {
      try {
        let chart_data = {
          'y_min': 0.0,
          'y_max': 0.0,
          'values': []
        };

        journal.entries.slice(1).map(entry => {
          chart_data.values.push({'label': entry.date, 'value': entry.mean_consumption_per_day}); 
        });
        
        const chart_max = Math.max(...chart_data.values.map(x => x.value));
        const chart_min = Math.min(...chart_data.values.map(x => x.value));
        chart_data.y_max = chart_max + chart_max / 5;
        chart_data.y_min = chart_min + chart_min / 5;

        resolve({
          'values': chart_data.values,
          'mean': journal.mean,
          'y_min': chart_data.y_min,
          'y_max': chart_data.y_max,
        });
      }
      catch {
        reject(console.log("Something bad happened..."));
      }
    });
  }
}

customElements.define('graph-view', GraphView);
</script>
